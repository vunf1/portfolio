name: Quality Assurance

on:
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run type-check
        
      - name: Lint
        run: npm run lint
        
      - name: Build for analysis
        run: npm run build:analyze
        env:
          NODE_ENV: production
          
      - name: Check bundle sizes
        run: |
          echo "📊 Bundle Size Analysis:"
          echo "========================"
          ls -la dist/assets/
          echo ""
          echo "Total dist folder size:"
          du -sh dist/
          
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Get bundle sizes
            const assetsDir = path.join(process.cwd(), 'dist', 'assets');
            let totalSize = 0;
            let fileCount = 0;
            
            if (fs.existsSync(assetsDir)) {
              const files = fs.readdirSync(assetsDir);
              files.forEach(file => {
                const filePath = path.join(assetsDir, file);
                const stats = fs.statSync(filePath);
                totalSize += stats.size;
                fileCount++;
              });
            }
            
            const totalSizeKB = Math.round(totalSize / 1024);
            const totalSizeMB = (totalSize / (1024 * 1024)).toFixed(2);
            
            const comment = `## 🚀 Quality Check Complete
            
            ✅ **Type Check**: Passed
            ✅ **Linting**: Passed  
            ✅ **Build**: Successful
            
            📊 **Bundle Analysis**:
            - **Total Files**: ${fileCount}
            - **Total Size**: ${totalSizeKB} KB (${totalSizeMB} MB)
            - **Status**: ${totalSizeKB < 500 ? '🟢 Excellent' : totalSizeKB < 1000 ? '🟡 Good' : '🟠 Large'}
            
            🔍 **Next Steps**:
            - Review bundle sizes
            - Check for unused dependencies
            - Optimize if bundle > 1MB
            
            ---
            *Auto-generated by GitHub Actions*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
